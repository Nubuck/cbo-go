I'd like to make a side quest now to produce a request Management insight report on the current state of the CBO verification solution.

Using the Roboteur record store feature, I store case models in a sqlite table called static_storage_record where the case model is stored in the json field entryData. This is the table schema:

CREATE TABLE `static_storage_record` (`_id` char(36), `createdAt` datetime, `updatedAt` datetime, `storageId` varchar(255), `entryData` json, primary key (`_id`))

These are actual case model examples with the sensitive data replaced with xxx

Valid:

{"dateNumber":20241124,"status":"complete","assignedTo":null,"result":"Valid","reason":"","comments":["PAQ Quote Reference Number matches BPM Case Number","PAQ Case Reference Numbers valid on all pages","PAQ Covid page found for Client Initials","PAQ Witness Initials valid","PAQ Covid page found for Client Signature","Application Case Reference Number matches BPM Case Number","Application Case Reference Numbers valid on all pages","Application Covid page found for Client Initials","PAQ Witness Initials valid","Application Covid page found for Client Signature","Validation of New loan amt total passed","Validation of Account interest rate passed","Validation of Installment passed","Validation of Initiation fee passed","Validation of New load amt admin passed","Validation of Insurance premium passed","Validation of Disbursement bank account number passed","Validation of App collection bank account number passed"],"issues":[],"product":"pl","productType":"Personal Loan","productDescription":"Personal Loan","caseId":"xxx","processId":"xxx","taskId":"xxx","partyId":"xxx","arrangementId":"xxx","accountNumber":"xxx","applicationDate":"24-11-2024","applicationType":"New","entityName":"MONGEZI MDEPA","entityIdNumber":"xxx","entityDob":"1984-11-10T00:00:00.000Z","entityGender":"Male","entityNationality":"SOUTH AFRICA","isNedbankAccount":"Yes","mainBanked":"Yes","bankName":"Nedbank Limited","bankAccountNumber":"xxx","bankAccountType":"Cheque Account","disbursementBankName":"NEDBANK","disbursementBankAccountNumber":"xxx","disbursementBankAccountType":"Cheque","collectionBankName":"NEDBANK","collectionBankAccountNumber":"xxx","collectionBankAccountType":"Cheque","isFraudFlagged":"No","isConsolidation":"No","isPensioner":"No","employmentType":"Permanent Salaried Employee","occupation":"OPERATOR","employmentIndustry":"CONSTR/ENGINEER SUPPLIES-BLDR PLANT HIRE","employerName":"LEOMAT PLANT HIRE","monthlyIncome":17618.74,"requestedAmount":20000,"interestRate":28.75,"installment":890.63,"initiationFee":1207.5,"upfrontInitiationFee":"No","newAccNum":"xxx","newLoanAmtTotal":20000,"newLoadAmtAdmin":69,"totalInstallment":890.63,"loanTerm":"48","insurancePremium":53.01,"totalRepayment":20000,"accountInitiationFee":"1207.5","accountInterestRate":28.75,"accountInterestRateType":"Prime Linked / Variable","productAppliedName":"Personal Loan","activationTime":"2024-11-24T13:12:12Z","dueTime":"2024-11-25T11:00:00Z","consolidations":[],"action":null,"machineName":"VM9","machineId":"e4a608db-1798-4e5d-864a-d5f62bc6218a","requestPaq":"No","requestPaqOption":"","requestPaqComment":"","requestApplication":"No","requestApplicationOption":"","requestApplicationComment":"","verifyComment":"PAQ and Application Verification Successful:\nPAQ Quote Reference Number matches BPM Case Number; \nPAQ Case Reference Numbers valid on all pages; \nPAQ Client Initials Valid; \nPAQ Covid page found for Client Initials; \nPAQ Witness Initials valid; \nPAQ Covid page found for Client Signature; \nPAQ Client Signature Valid; \nApplication Case Reference Number matches BPM Case Number; \nApplication Case Reference Numbers valid on all pages; \nApplication Client Initials Valid; \nApplication Client Signature Valid; \nValidation of Requested amount passed; \nValidation of Account interest rate passed; \nValidation of Installment passed; \nValidation of Initiation fee passed; \nValidation of New load amt admin passed; \nValidation of Insurance premium passed; \nValidation of Collection bank account number passed; \nValidation of Disbursement bank account number passed; \nValidation of App collection bank account number passed; \n"}

Invalid and pended:

{"verifyComment":"PAQ and Application Verification Successful:\nPAQ Quote Reference Number matches BPM Case Number; \nPAQ Case Reference Numbers valid on all pages; \nPAQ Client Initials Valid; \nPAQ Witness Initials valid; \nPAQ Client Signature Valid; \nApplication Case Reference Number matches BPM Case Number; \nApplication Case Reference Numbers valid on all pages; \nApplication Client Initials Valid; \nApplication Client Signature Valid; \nValidation of Requested amount passed; \nValidation of Account interest rate passed; \nValidation of Installment passed; \nValidation of Initiation fee passed; \nValidation of New load amt admin passed; \nValidation of Insurance premium passed; \nValidation of Collection bank account number passed; \nValidation of Disbursement bank account number passed; \nValidation of App collection bank account number passed; \nPAQ Consolidation data matches BPM;","requestPaqComment":"","requestApplicationComment":"","dateNumber":20241123,"status":"complete","assignedTo":null,"result":"Valid","reason":"Application Client Signature Missing","comments":["PAQ Quote Reference Number matches BPM Case Number","PAQ Case Reference Numbers valid on all pages","PAQ Client Initials Valid","PAQ Witness Initials valid","PAQ Client Signature Valid","Application Case Reference Number matches BPM Case Number","Application Case Reference Numbers valid on all pages","PAQ Witness Initials valid","Validation of New loan amt total passed","Validation of Account interest rate passed","Validation of Installment passed","Validation of Initiation fee passed","Validation of New load amt admin passed","Validation of Insurance premium passed","Validation of Disbursement bank account number passed","Validation of App collection bank account number passed"],"issues":["Application Client Signature Missing"],"product":"pl","productType":"Personal Loan","productDescription":"Personal Loan","caseId":"xxx","processId":"xxx","taskId":"xxx","partyId":"xxx","arrangementId":"xxx","accountNumber":"xxx","applicationDate":"23-11-2024","applicationType":"New","entityName":"MALEFETSANE MOKOENA","entityIdNumber":"xxx","entityDob":"1965-08-28T00:00:00.000Z","entityGender":"Male","entityNationality":"SOUTH AFRICA","isNedbankAccount":"Yes","mainBanked":"Yes","bankName":"Nedbank Limited","bankAccountNumber":"xxx","bankAccountType":"Cheque Account","disbursementBankName":"NEDBANK","disbursementBankAccountNumber":"xxx","disbursementBankAccountType":"Cheque","collectionBankName":"NEDBANK","collectionBankAccountNumber":"xxx","collectionBankAccountType":"Cheque","isFraudFlagged":"Yes","isConsolidation":"Yes","isPensioner":"No","employmentType":"Permanent Salaried Employee","occupation":"DRIVER","employmentIndustry":"TRANSPORTATION&EQUIP-SHIPBUILDING&REPAIR","employerName":"BOTHMAS AND SONS T","monthlyIncome":6326.37,"requestedAmount":125239.03,"interestRate":28.75,"installment":4603.87,"initiationFee":1207.5,"upfrontInitiationFee":"No","newAccNum":"xxx","newLoanAmtTotal":125239.03,"newLoadAmtAdmin":69,"totalInstallment":4603.87,"loanTerm":"60","insurancePremium":442.56,"totalRepayment":125239.03,"accountInitiationFee":"1207.5","accountInterestRate":28.75,"accountInterestRateType":"Prime Linked / Variable","productAppliedName":"Personal Loan","activationTime":"2024-11-23T09:04:48Z","dueTime":"2024-11-25T11:00:00Z","consolidations":[{"supplierName":"NEDBANK PERSONAL LOANS","debtType":"NEDBANK PERSONAL LOANS","supplierAccNumberVerified":"xxx","referenceNumberVerified":"xxx","amountToLoanCreditProposed":"940.98","settlementAmountModifiableByClient":false,"settlementLetterRequired":"N"},{"supplierName":"NEDBANK PERSONAL LOANS","debtType":"NEDBANK PERSONAL LOANS","supplierAccNumberVerified":"xxx","referenceNumberVerified":"xxx","amountToLoanCreditProposed":"119298.05","settlementAmountModifiableByClient":false,"settlementLetterRequired":"N"}],"action":null,"machineName":"VM8","machineId":"e05d7843-4183-4733-a97d-66c554f7e4ed","requestPaq":"No","requestPaqOption":"","requestApplication":"No","requestApplicationOption":""}


Here are some current queries that I use to draw rudimentary MI reports:

totals by product:

SELECT
    json_extract(entryData, '$.dateNumber') AS dateNumber,
	CASE WHEN json_extract(entryData, '$.status') = 'review' THEN 'reassigned' ELSE json_extract(entryData, '$.status') END as status,
    COUNT(CASE WHEN json_extract(entryData, '$.productType') = 'Personal Loan' THEN 1 END) AS PersonalLoanCount,
    COUNT(CASE WHEN json_extract(entryData, '$.productType') = 'Credit Card' THEN 1 END) AS CreditCardCount,
    COUNT(CASE WHEN json_extract(entryData, '$.productType') = 'Overdraft' THEN 1 END) AS OverdraftCount
FROM
    static_storage_record
WHERE
json_extract(entryData, '$.dateNumber') > 20241020
GROUP BY
    json_extract(entryData, '$.dateNumber'),
    json_extract(entryData, '$.status')
ORDER BY
    json_extract(entryData, '$.dateNumber');

totals by status:

SELECT
    json_extract(entryData, '$.dateNumber') AS dateNumber,
    COUNT(json_extract(entryData, '$.status')) AS ProcessCount,
    COUNT(CASE WHEN json_extract(entryData, '$.status') = 'complete' THEN 1 END) AS CompleteCount,
    COUNT(CASE WHEN json_extract(entryData, '$.status') = 'request' THEN 1 END) AS RequestCount,
    COUNT(CASE WHEN json_extract(entryData, '$.status') = 'review' THEN 1 END) AS ReassignCount
FROM
    static_storage_record
WHERE
json_extract(entryData, '$.dateNumber') > 20241020
GROUP BY
    json_extract(entryData, '$.dateNumber')
ORDER BY
    json_extract(entryData, '$.dateNumber');


I would like to present a better set of reports today. Please help me query and structure the following:

- total tasks processed vs total cases by case _id:
  - how many first time complete status
  - how many times was a case pended by the review and request status

- what are the most common reasons for pending based on the requestPaqComment and requestApplicationComment values, I know for sure the Disbursement account mismatch is the most common, but how to query this?

Please suggest any other insight metrics you think the execs might find interesting and as always ask me anything



I'll help implement the scanning and OCR pipeline to complement our hybrid validation approach. Let me first ask a few clarifying questions about the current state:

1. For the hybrid validation approach, we're currently handling both digital PDFs and scanned documents, but primarily focusing on digital first with pdf.js-extract, correct? 

2. Looking at the example-cli.js proof of concept, I see you're using:
   - pdf-to-img with scale: 3 for better OCR quality
   - tesseract-wasm with word-level text boxes
   - Custom image loading with sharp for consistent RGBA format

3. I notice in HybridValidator we have some OCR-specific configurations but no integrated OCR pipeline yet. The current confidence scoring considers OCR vs digital sources though.

4. The project-context.md suggests we're using @techstark/opencv-js - are you planning to use this for any image preprocessing before OCR? 

For implementation, I'm thinking we should:

1. Add an OCR processing pipeline that integrates with our existing HybridValidator
2. Create a unified text box model that works for both PDF extraction and OCR
3. Implement image preprocessing optimization for better OCR results
4. Handle multi-page documents properly with concurrent processing

Would you prefer we start with any particular aspect? Also, do you have any specific requirements around:

- Image preprocessing approach (contrast enhancement, deskewing, etc.)
- Handling multi-page documents (process all at once vs streaming)
- OCR confidence thresholds and validation
- Memory management for large documents

Let me know your thoughts and priorities, and I can propose a specific implementation approach.


1. We started with digital documents first to establish a running cli. There's likely going to be more OCR cases than digital cases so we need to inspect each document to establish if there is proper digital text boxes or whether the pages need to be extracted for OCR. in fact the image extract needs to happen for both types of documents, because we still need to do visual confirmation of signed initials on each page and a signature which doesnt translate in the digital data. So we extract all documents to images to check for signature markings guided by either the digital text boxes or the ocr text boxes

2. correct - these same packages are availible in our repomix project. I've auditioned many packages and these have worked the best. opencv wasm is also there for heavy lifting image processing

3. Correct - it's a start

4. Correct

You implementation plan is solid. Lets establish the extraction pipline with room for pre processing middleware. The types of pre processing checks and transformations we need to perform are:

- check the page brightness - if it's too dark because the scanned document is actually a smart phone photo, we need to brighten and sharpen. if it's too light and faded we need adjust contrast and brightness, sharpen and maybe layer
- check page orientation - many documents arrive scanned in up-side-down, side-ways, skew to the left or the right or skew left one page and the next is skew right. 
- check page size / resoluton - when the image quality confidence is low we will need to scale the image to get a better tesseract read 

We should also cater for post processing - for once the pre processing and validation process returns failed results due to hunted values not being found, we should take any page section info available where we expect to find the hunted values, crop that section of the image and enlarge and enhance the image to OCR again and hopefully get a better read.

Scanned documents also aren't always in the right page order, so really we should evaluate each page that can potentially contain the values we have not yet hunted. both digital and scanned documents can both also have multiple documents within - dispensation form, paq and application documents joined. 

My priority is to establish the OCR pipeline, normalize the tesseract results with the digital boxes into a common model, pre process images, post process images
